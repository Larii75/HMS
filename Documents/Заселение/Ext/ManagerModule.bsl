///Copyright (c) 2021, https://github.com/Larii75.
///
///Разрешается повторное распространение и использование как в виде исходного кода, так и в двоичной форме, с изменениями или без, при соблюдении следующих условий:
///
///При повторном распространении исходного кода должно оставаться указанное выше уведомление об авторском праве, этот список условий и последующий отказ от гарантий.
///При повторном распространении двоичного кода должна сохраняться указанная выше информация об авторском праве, этот список условий и последующий отказ от гарантий 
///в документации и/или в других материалах, поставляемых при распространении. 
///Ни название <Организации>, ни имена её сотрудников не могут быть использованы в качестве поддержки или продвижения продуктов, основанных на этом ПО без предварительного письменного разрешения.
///ЭТА ПРОГРАММА ПРЕДОСТАВЛЕНА ВЛАДЕЛЬЦАМИ АВТОРСКИХ ПРАВ И/ИЛИ ДРУГИМИ СТОРОНАМИ «КАК ОНА ЕСТЬ» БЕЗ КАКОГО-ЛИБО ВИДА ГАРАНТИЙ, ВЫРАЖЕННЫХ ЯВНО ИЛИ ПОДРАЗУМЕВАЕМЫХ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ИМИ, 
///ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ КОММЕРЧЕСКОЙ ЦЕННОСТИ И ПРИГОДНОСТИ ДЛЯ КОНКРЕТНОЙ ЦЕЛИ. 
///НИ В КОЕМ СЛУЧАЕ НИ ОДИН ВЛАДЕЛЕЦ АВТОРСКИХ ПРАВ И НИ ОДНО ДРУГОЕ ЛИЦО, КОТОРОЕ МОЖЕТ ИЗМЕНЯТЬ И/ИЛИ ПОВТОРНО РАСПРОСТРАНЯТЬ ПРОГРАММУ, КАК БЫЛО СКАЗАНО ВЫШЕ, НЕ НЕСЁТ ОТВЕТСТВЕННОСТИ,
///ВКЛЮЧАЯ ЛЮБЫЕ ОБЩИЕ, СЛУЧАЙНЫЕ, СПЕЦИАЛЬНЫЕ ИЛИ ПОСЛЕДОВАВШИЕ УБЫТКИ, ВСЛЕДСТВИЕ ИСПОЛЬЗОВАНИЯ ИЛИ НЕВОЗМОЖНОСТИ ИСПОЛЬЗОВАНИЯ ПРОГРАММЫ 
///(ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ПОТЕРЕЙ ДАННЫХ, ИЛИ ДАННЫМИ, СТАВШИМИ НЕПРАВИЛЬНЫМИ, ИЛИ ПОТЕРЯМИ, ПРИНЕСЕННЫМИ ИЗ-ЗА ВАС ИЛИ ТРЕТЬИХ ЛИЦ, 
///ИЛИ ОТКАЗОМ ПРОГРАММЫ РАБОТАТЬ СОВМЕСТНО С ДРУГИМИ ПРОГРАММАМИ), ДАЖЕ ЕСЛИ ТАКОЙ ВЛАДЕЛЕЦ ИЛИ ДРУГОЕ ЛИЦО БЫЛИ ИЗВЕЩЕНЫ О ВОЗМОЖНОСТИ ТАКИХ УБЫТКОВ.
///
///Copyright (c) 2021, https://github.com/Larii75 All rights reserved.
///
///Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
///
///Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
///Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
///Neither the name of the <ORGANIZATION> nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
///THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
///THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER 
///OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
///PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
///LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
///EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Процедура СоглашениеПоCovid19(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.Заселение.ПолучитьМакет("СоглашениеПоCovid19");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Заселение.Дата КАК Дата,
	|	ГостиИОрганизаторы.СерияДокумента КАК СерияДокумента,
	|	ГостиИОрганизаторы.НомерДокумента КАК НомерДокумента,
	|	ГостиИОрганизаторы.КемВыдан КАК КемВыдан,
	|	ГостиИОрганизаторы.КогдаВыдан КАК КогдаВыдан,
	|	ГостиИОрганизаторы.АдресРегистрации КАК АдресРегистрации,
	|	ГостиИОрганизаторыКонтакты.Контакт КАК Контакт,
	|	МоиОрганизации.Наименование КАК НаименованиеОрганизации,
	|	МоиОрганизации.ТипДокумента КАК ТипДокументаОрганизации,
	|	МоиОрганизации.НомерДокумента КАК НомерДокументаОрганизации,
	|	МоиОрганизации.ФИОРуководителя КАК ФИОРуководителя,
	|	ЗаселениеГостиПоМестам.Гость КАК Гость,
	|	ГостиИОрганизаторы.Фамилия + "" "" + ГостиИОрганизаторы.Имя + ВЫБОР
	|		КОГДА ГостиИОрганизаторы.Отчество = """"
	|			ТОГДА """"
	|		ИНАЧЕ "" "" + ГостиИОрганизаторы.Отчество
	|	КОНЕЦ КАК ФИОГостя,
	|	СтраныМира.ИмяПредопределенныхДанных КАК ГражданствоСтранаРегистрации
	|ИЗ
	|	Справочник.МоиОрганизации КАК МоиОрганизации,
	|	Документ.Заселение.ГостиПоМестам КАК ЗаселениеГостиПоМестам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Заселение КАК Заселение
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГостиИОрганизаторы КАК ГостиИОрганизаторы
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГостиИОрганизаторы.Контакты КАК ГостиИОрганизаторыКонтакты
	|				ПО ГостиИОрганизаторы.Ссылка = ГостиИОрганизаторыКонтакты.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
	|				ПО ГостиИОрганизаторы.ГражданствоСтранаРегистрации = СтраныМира.Ссылка
	|			ПО Заселение.ГостиПоМестам.Гость = ГостиИОрганизаторы.Ссылка
	|		ПО ЗаселениеГостиПоМестам.Ссылка = Заселение.Ссылка
	|ГДЕ
	|	Заселение.Ссылка В(&Ссылка)
	|	И ГостиИОрганизаторыКонтакты.ТипКонтакта = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактов.Телефон)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		Шапка.Параметры.Дата = Формат(Выборка.Дата, "ДФ=dd.MM.yyyy");
		Шапка.Параметры.КогдаВыдан = Формат(Выборка.КогдаВыдан, "ДФ=dd.MM.yyyy");
		
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = Истина;
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	
КонецПроцедуры

Процедура ПечатьПравилаОбщежития(ТабДок, Ссылка) Экспорт
	
	Макет = Документы.Заселение.ПолучитьМакет("ПечатьПравилаОбщежития");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументБронирование.Бронирующий КАК Фирма,
	|	Заселение.Дата КАК Дата,
	|	ГостиИОрганизаторы.Фамилия + "" "" + ГостиИОрганизаторы.Имя + ВЫБОР
	|		КОГДА ГостиИОрганизаторы.Отчество = """"
	|			ТОГДА """"
	|		ИНАЧЕ "" "" + ГостиИОрганизаторы.Отчество
	|	КОНЕЦ КАК ФИОГостя,
	|	ГостиИОрганизаторыКонтакты.Контакт КАК Телефон
	|ИЗ
	|	Документ.Заселение.ГостиПоМестам КАК ЗаселениеГостиПоМестам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Заселение КАК Заселение
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Бронирование КАК ДокументБронирование
	|			ПО Заселение.Бронирование = ДокументБронирование.Ссылка
	|		ПО ЗаселениеГостиПоМестам.Ссылка = Заселение.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГостиИОрганизаторы КАК ГостиИОрганизаторы
	|		ПО ЗаселениеГостиПоМестам.Гость = ГостиИОрганизаторы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГостиИОрганизаторы.Контакты КАК ГостиИОрганизаторыКонтакты
	|		ПО ЗаселениеГостиПоМестам.Гость = ГостиИОрганизаторыКонтакты.Ссылка
	|ГДЕ
	|	ГостиИОрганизаторыКонтакты.ТипКонтакта = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактов.Телефон)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
			
		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		Подвал.Параметры.Дата = Формат(Выборка.Дата, "ДФ=dd.MM.yyyy");
		ТабДок.Вывести(Подвал);
		ВставлятьРазделительСтраниц = Истина;
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;

КонецПроцедуры

Процедура ПечатьПропусков(ТабДок, Ссылка) Экспорт
		
	Макет = Документы.Заселение.ПолучитьМакет("ПечатьПропусков");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Заселение.Дата КАК КогдаВыдан,
	|	Заселение.Номер КАК НомерПропуска,
	|	Заселение.Проведен КАК Проведен,
	|	Заселение.ГостиПоМестам.(
	|		Гость.Ссылка КАК ГостьСсылка,
	|		Заселение.ГостиПоМестам.Гость.Фамилия + "" "" + Заселение.ГостиПоМестам.Гость.Имя КАК Гость,
	|		НомерСтроки КАК НомерСтроки
	|	) КАК ГостиПоМестам,
	|	ДокументБронирование.Окончание КАК Действителен
	|ИЗ
	|	Документ.Заселение КАК Заселение
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Бронирование КАК ДокументБронирование
	|		ПО Заселение.Бронирование = ДокументБронирование.Ссылка
	|ГДЕ
	|	Заселение.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ВставлятьРазделительСтраниц = Ложь;
	ТабДок.Очистить();
	ТабДок.ВерхнийКолонтитул.Выводить = Истина;

	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.Проведен Тогда
			ВызватьИсключение("Печать возможна только из проведенных документов!");
		КонецЕсли;
		ВыборкаГостиПоМестам = Выборка.ГостиПоМестам.Выбрать();
		Пока ВыборкаГостиПоМестам.Следующий() Цикл
			Шапка = Макет.ПолучитьОбласть("Шапка");
			Тело = Макет.ПолучитьОбласть("Тело");
			
			РегистрМенеджер = РегистрыСведений.БезопасноеХранилищеДанных;
			РезультатИзмерения = РегистрМенеджер.ВернутьРезультатЗапросаСИзмерениямиПоследнееФотоНаДокумент(ВыборкаГостиПоМестам.ГостьСсылка);
			СтруктураДляКлюча = РегистрМенеджер.СтруктураИзмеренийДляСозданияКлюча(РезультатИзмерения);
			Ключ = РегистрМенеджер.СоздатьКлючЗаписи(СтруктураДляКлюча);
			АдресФото = РегистрМенеджер.ВернутьАдресВременногоХранилищаДД(Ключ);
			
			Тело.Рисунки.Получить(0).Картинка = Новый Картинка(ПолучитьИзВременногоХранилища(АдресФото));
			
			Шапка.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(Шапка, Выборка.Уровень());

			Тело.Параметры.Заполнить(ВыборкаГостиПоМестам);
			Тело.Параметры.КогдаВыдан = Формат(Выборка.КогдаВыдан, "ДФ=dd/MM/yyy");
			Тело.Параметры.Действителен = Формат(Выборка.Действителен, "ДФ=dd/MM/yyy");
			ТабДок.Вывести(Тело, ВыборкаГостиПоМестам.Уровень());
			Если ВыборкаГостиПоМестам.НомерСтроки = 6 Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли
		КонецЦикла;

		ВставлятьРазделительСтраниц = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

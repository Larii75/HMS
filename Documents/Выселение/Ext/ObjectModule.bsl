///Copyright (c) 2021, https://github.com/Larii75.
///
///Разрешается повторное распространение и использование как в виде исходного кода, так и в двоичной форме, с изменениями или без, при соблюдении следующих условий:
///
///При повторном распространении исходного кода должно оставаться указанное выше уведомление об авторском праве, этот список условий и последующий отказ от гарантий.
///При повторном распространении двоичного кода должна сохраняться указанная выше информация об авторском праве, этот список условий и последующий отказ от гарантий 
///в документации и/или в других материалах, поставляемых при распространении. 
///Ни название <Организации>, ни имена её сотрудников не могут быть использованы в качестве поддержки или продвижения продуктов, основанных на этом ПО без предварительного письменного разрешения.
///ЭТА ПРОГРАММА ПРЕДОСТАВЛЕНА ВЛАДЕЛЬЦАМИ АВТОРСКИХ ПРАВ И/ИЛИ ДРУГИМИ СТОРОНАМИ «КАК ОНА ЕСТЬ» БЕЗ КАКОГО-ЛИБО ВИДА ГАРАНТИЙ, ВЫРАЖЕННЫХ ЯВНО ИЛИ ПОДРАЗУМЕВАЕМЫХ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ИМИ, 
///ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ КОММЕРЧЕСКОЙ ЦЕННОСТИ И ПРИГОДНОСТИ ДЛЯ КОНКРЕТНОЙ ЦЕЛИ. 
///НИ В КОЕМ СЛУЧАЕ НИ ОДИН ВЛАДЕЛЕЦ АВТОРСКИХ ПРАВ И НИ ОДНО ДРУГОЕ ЛИЦО, КОТОРОЕ МОЖЕТ ИЗМЕНЯТЬ И/ИЛИ ПОВТОРНО РАСПРОСТРАНЯТЬ ПРОГРАММУ, КАК БЫЛО СКАЗАНО ВЫШЕ, НЕ НЕСЁТ ОТВЕТСТВЕННОСТИ,
///ВКЛЮЧАЯ ЛЮБЫЕ ОБЩИЕ, СЛУЧАЙНЫЕ, СПЕЦИАЛЬНЫЕ ИЛИ ПОСЛЕДОВАВШИЕ УБЫТКИ, ВСЛЕДСТВИЕ ИСПОЛЬЗОВАНИЯ ИЛИ НЕВОЗМОЖНОСТИ ИСПОЛЬЗОВАНИЯ ПРОГРАММЫ 
///(ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ПОТЕРЕЙ ДАННЫХ, ИЛИ ДАННЫМИ, СТАВШИМИ НЕПРАВИЛЬНЫМИ, ИЛИ ПОТЕРЯМИ, ПРИНЕСЕННЫМИ ИЗ-ЗА ВАС ИЛИ ТРЕТЬИХ ЛИЦ, 
///ИЛИ ОТКАЗОМ ПРОГРАММЫ РАБОТАТЬ СОВМЕСТНО С ДРУГИМИ ПРОГРАММАМИ), ДАЖЕ ЕСЛИ ТАКОЙ ВЛАДЕЛЕЦ ИЛИ ДРУГОЕ ЛИЦО БЫЛИ ИЗВЕЩЕНЫ О ВОЗМОЖНОСТИ ТАКИХ УБЫТКОВ.
///
///Copyright (c) 2021, https://github.com/Larii75 All rights reserved.
///
///Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
///
///Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
///Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
///Neither the name of the <ORGANIZATION> nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
///THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
///THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER 
///OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
///PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
///LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
///EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#Если Сервер ИЛИ ВнешнееСоединение Тогда
	
// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Ответственный = ПараметрыСеанса.ТекущийПользователь;

КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Заселение") Тогда
		Бронирование = ДанныеЗаполнения.Бронирование;
		Заселение = ДанныеЗаполнения.Ссылка;
		СредствоРазмещения = ДанныеЗаполнения.СредствоРазмещения;
		ЭтажСредстваРазмещения = ДанныеЗаполнения.ЭтажСредстваРазмещения;
		Для Каждого ТекСтрокаГостиПоМестам Из ДанныеЗаполнения.ГостиПоМестам Цикл
			НоваяСтрока = ГостиПоМестам.Добавить();
			НоваяСтрока.Гость = ТекСтрокаГостиПоМестам.Гость;
			НоваяСтрока.Комната = ТекСтрокаГостиПоМестам.Комната;
			НоваяСтрока.Место = ТекСтрокаГостиПоМестам.Место;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Для Каждого Движение Из Движения Цикл
		Движение.Записывать = Истина;
		Движение.Очистить();
		Движение.Записать();
		Движение.БлокироватьДляИзменения = Истина;
		Движение.Записывать = Истина;
	КонецЦикла;
	
	Для Каждого ТекСтрокаГостиПоМестам Из ГостиПоМестам Цикл
		
		// регистр ОстаткиВыселенийПоЗаселениям Расход
		Движение2 = Движения.ОстаткиВыселенийПоЗаселениям.Добавить();
		Движение2.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение2.Период = Дата;
		Движение2.Бронирование = Бронирование;
		Движение2.Заселение = Заселение;
		Движение2.СредствоРазмещения = СредствоРазмещения;
		Движение2.ЭтажСредстваРазмещения = ЭтажСредстваРазмещения;
		Движение2.КомнатаСредстваРазмещения = ТекСтрокаГостиПоМестам.Комната;
		Движение2.МестоРазмещения = ТекСтрокаГостиПоМестам.Место;
		Движение2.Гость = ТекСтрокаГостиПоМестам.Гость;
		Движение2.Количество = 1;
		
		// регистр ОстаткиБронирования Приход
		Движение3 = Движения.ОстаткиБронирования.Добавить();
		Движение3.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение3.Период = Дата;
		Движение3.МояОрганизация = Бронирование.МояОрганизация;
		Движение3.Событие = Бронирование.Событие;
		Движение3.Бронирующий = Бронирование.Бронирующий;
		Движение3.Бронирование = Бронирование;
		Движение3.СредствоРазмещения = СредствоРазмещения;
		Движение3.ЭтажСредстваРазмещения = ЭтажСредстваРазмещения;
		Движение3.КомнатаСредстваРазмещения = ТекСтрокаГостиПоМестам.Комната;
		Движение3.МестоРазмещения = ТекСтрокаГостиПоМестам.Место;
		Движение3.Количество = 1;

		// регистр ОборотыВыселения
		Движение4 = Движения.ОборотыВыселения.Добавить();
		Движение4.Период = Дата;
		Движение4.Бронирование = Бронирование;
		Движение4.СредствоРазмещения = СредствоРазмещения;
		Движение4.ЭтажСредстваРазмещения = ЭтажСредстваРазмещения;
		Движение4.КомнатаСредстваРазмещения = ТекСтрокаГостиПоМестам.Комната;
		Движение4.МестоРазмещения = ТекСтрокаГостиПоМестам.Место;
		Движение4.Гость = ТекСтрокаГостиПоМестам.Гость;
		Движение4.Количество = 1;
		
		// регистр ОстаткиПроживающихГостей
		Движение5 = Движения.ОстаткиПроживающихГостей.ДобавитьРасход();
		Движение5.Период = НачалоДня(ФункцииПримитивныеТипыКлиентСервер.ВернутьДатуСДобавитьКДатеКС(Дата, "ДЕНЬ", 1));
		Движение5.Бронирование = Бронирование;
		Движение5.СредствоРазмещения = СредствоРазмещения;
		Движение5.ЭтажСредстваРазмещения = ЭтажСредстваРазмещения;
		Движение5.КомнатаСредстваРазмещения = ТекСтрокаГостиПоМестам.Комната;
		Движение5.МестоРазмещения = ТекСтрокаГостиПоМестам.Место;
		Движение5.Гость = ТекСтрокаГостиПоМестам.Гость;
		Движение5.Количество = 1;
		
	КонецЦикла;
	
	///Проверяем остатки
	Для Каждого Движение Из Движения Цикл
		Движение.Записать();
	КонецЦикла;
	КонтрольОстатковВыселение(Бронирование, Бронирование.Дата, Бронирование.Окончание, ДополнительныеСвойства, Отказ);
	
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура КонтрольОстатковВыселение(БронированиеСсылка, ПериодНачало, ПериодОкончание, ДополнительныеСвойства, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ОстаткиЗаселенияПоБронированиямОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	ПРЕДСТАВЛЕНИЕССЫЛКИ(ОстаткиЗаселенияПоБронированиямОстатки.Бронирование) КАК Бронирование,
	               |	ОстаткиЗаселенияПоБронированиямОстатки.СредствоРазмещения КАК СредствоРазмещения,
	               |	ОстаткиЗаселенияПоБронированиямОстатки.ЭтажСредстваРазмещения КАК ЭтажСредстваРазмещения,
	               |	ОстаткиЗаселенияПоБронированиямОстатки.КомнатаСредстваРазмещения КАК КомнатаСредстваРазмещения,
	               |	ПРЕДСТАВЛЕНИЕ(ОстаткиЗаселенияПоБронированиямОстатки.МестоРазмещения) КАК МестоРазмещения
	               |ИЗ
	               |	РегистрНакопления.ОстаткиЗаселенияПоБронированиям.Остатки(, Бронирование = &БронированиеСсылка) КАК ОстаткиЗаселенияПоБронированиямОстатки
	               |ГДЕ
	               |	ОстаткиЗаселенияПоБронированиямОстатки.КоличествоОстаток < 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ОстаткиВыселенийПоЗаселениямОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	ПРЕДСТАВЛЕНИЕССЫЛКИ(ОстаткиВыселенийПоЗаселениямОстатки.Бронирование) КАК Бронирование,
	               |	ОстаткиВыселенийПоЗаселениямОстатки.СредствоРазмещения КАК СредствоРазмещения,
	               |	ОстаткиВыселенийПоЗаселениямОстатки.ЭтажСредстваРазмещения КАК ЭтажСредстваРазмещения,
	               |	ОстаткиВыселенийПоЗаселениямОстатки.КомнатаСредстваРазмещения КАК КомнатаСредстваРазмещения,
	               |	ПРЕДСТАВЛЕНИЕ(ОстаткиВыселенийПоЗаселениямОстатки.МестоРазмещения) КАК МестоРазмещения
	               |ИЗ
	               |	РегистрНакопления.ОстаткиВыселенийПоЗаселениям.Остатки(, Бронирование = &БронированиеСсылка) КАК ОстаткиВыселенийПоЗаселениямОстатки
	               |ГДЕ
	               |	ОстаткиВыселенийПоЗаселениямОстатки.КоличествоОстаток < 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ОстаткиМестРазмещенияОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	               |	ОстаткиМестРазмещенияОстаткиИОбороты.СредствоРазмещения КАК СредствоРазмещения,
	               |	ОстаткиМестРазмещенияОстаткиИОбороты.ЭтажСредстваРазмещения КАК ЭтажСредстваРазмещения,
	               |	ОстаткиМестРазмещенияОстаткиИОбороты.КомнатаСредстваРазмещения КАК КомнатаСредстваРазмещения,
	               |	ОстаткиМестРазмещенияОстаткиИОбороты.МестоРазмещения КАК МестоРазмещения,
	               |	ОстаткиМестРазмещенияОстаткиИОбороты.Бронирование КАК Бронирование,
	               |	ОстаткиМестРазмещенияОстаткиИОбороты.Период КАК Период
	               |ИЗ
	               |	РегистрНакопления.ОстаткиМестРазмещения.ОстаткиИОбороты(
	               |			&Начало,
	               |			&Окончание,
	               |			Регистратор,
	               |			ДвиженияИГраницыПериода,
	               |			(СредствоРазмещения, ЭтажСредстваРазмещения, КомнатаСредстваРазмещения, МестоРазмещения) В
	               |				(ВЫБРАТЬ
	               |					ТЧ.Ссылка.СредствоРазмещения,
	               |					ТЧ.Ссылка.ЭтажСредстваРазмещения,
	               |					ТЧ.КомнатаСредстваРазмещения,
	               |					ТЧ.МестоРазмещения
	               |				ИЗ
	               |					Документ.Бронирование.МестаРазмещения КАК ТЧ
	               |				ГДЕ
	               |					ТЧ.Ссылка = &БронированиеСсылка)) КАК ОстаткиМестРазмещенияОстаткиИОбороты
	               |ГДЕ
	               |	ОстаткиМестРазмещенияОстаткиИОбороты.КоличествоКонечныйОстаток < 0";
	   
	Запрос.УстановитьПараметр("БронированиеСсылка", БронированиеСсылка);
	Запрос.УстановитьПараметр("Начало", ПериодНачало);
	Запрос.УстановитьПараметр("Окончание", ПериодОкончание);
		
	Пакет = Запрос.ВыполнитьПакет();
	
	ВыборкаОстаткиЗаселений = Пакет[0].Выбрать();
	Пока ВыборкаОстаткиЗаселений.Следующий() Цикл
		Отказ = Истина;
	   	Сообщить("По документу " + ВыборкаОстаткиЗаселений.Бронирование + " по месту размещения " + ВыборкаОстаткиЗаселений.МестоРазмещения + " отрицательный остаток по остаткам заселения!");
	КонецЦикла;
	
	ВыборкаОстаткиВыселений = Пакет[1].Выбрать();
	Пока ВыборкаОстаткиВыселений.Следующий() Цикл
		Отказ = Истина;
	   	Сообщить("По документу " + ВыборкаОстаткиВыселений.Бронирование + " по месту размещения " + ВыборкаОстаткиВыселений.МестоРазмещения + " отрицательный остаток по остаткам выселения!");
	КонецЦикла;
	
	ВыборкаОстаткиМестРазмещения = Пакет[2].Выбрать();
	Пока ВыборкаОстаткиМестРазмещения.Следующий() Цикл
		Отказ = Истина;
	   	Сообщить("По документу " + ВыборкаОстаткиМестРазмещения.Бронирование + " по месту размещения " + ВыборкаОстаткиМестРазмещения.МестоРазмещения + "
		|на дату " + Формат(ВыборкаОстаткиМестРазмещения.Период, "ДФ=dd/MM/yy") + " отрицательный остаток по остаткам мест размещения!");
	КонецЦикла;
	
КонецПроцедуры // КонтрольОстатковВыселение()
	
#Иначе

ВызватьИсключение("Недопустимый вызов объекта на клиенте!");

#КонецЕсли
